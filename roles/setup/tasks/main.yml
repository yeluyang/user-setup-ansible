---
- name: add user {{ user.name }}
  become: true
  user:
    name: "{{ user.name }}"
    password: "{{ user.pass | password_hash('sha512') }}"
    update_password: on_create
    generate_ssh_key: yes
    ssh_key_comment: "{{ user.name }}@{{ ansible_nodename}}"

- name: setup home directory for user {{ user.name }}
  become: true
  become_user: "{{ user.name }}"
  file:
    path: "{{ user_home }}/{{ dir_name }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0755"
  loop_control:
    loop_var: dir_name
  loop:
    - src
    - bin
    - pkg
    - tmp

- name: create user profile {{ user_home }}/{{ user_profile }}
  become: true
  become_user: "{{ user.name }}"
  file:
    path: "{{ user_home }}/{{ user_profile }}"
    state: touch
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0644"
    modification_time: preserve
    access_time: preserve

- name: setup user env {{ user_home }}/.{{ user.name }}.static.profile
  become: true
  become_user: "{{ user.name }}"
  template:
    src: static.profile.j2
    dest: "{{ user_home }}/.{{ user.name }}.static.profile"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0644"

- name: include user static profile into {{ user_profile }}
  become: true
  become_user: "{{ user.name }}"
  blockinfile:
    path: "{{ user_home }}/{{ user_profile }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK user_setup/{{ role_name }}/env"
    block: |
      source {{ user_home }}/.{{ user.name }}.static.profile

- name: create shell profile {{ user_home }}/.profile
  become: true
  become_user: "{{ user.name }}"
  file:
    path: "{{ user_home }}/.profile"
    state: touch
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0644"
    modification_time: preserve
    access_time: preserve

- name: include {{ user_profile }} into {{ user_home }}/.profile
  become: true
  become_user: "{{ user.name }}"
  blockinfile:
    path: "{{ user_home }}/.profile"
    marker: "# {mark} ANSIBLE MANAGED BLOCK user_setup/{{ role_name }}/shell"
    block: |
      source {{ user_home }}/{{ user_profile }}

- name: create shell profile {{ user_home }}/.zprofile
  become: true
  become_user: "{{ user.name }}"
  file:
    path: "{{ user_home }}/.zprofile"
    state: touch
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0644"
    modification_time: preserve
    access_time: preserve

- name: include {{ user_profile }} into {{ user_home }}/.zprofile
  become: true
  become_user: "{{ user.name }}"
  blockinfile:
    path: "{{ user_home }}/.zprofile"
    marker: "# {mark} ANSIBLE MANAGED BLOCK user_setup/{{ role_name }}/shell"
    block: |
      source {{ user_home }}/{{ user_profile }}

- name: create user ssh config directory
  become: true
  become_user: "{{ user.name }}"
  file:
    path: "{{ user_home }}/.ssh"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0755"

- name: create user ssh config file
  become: true
  become_user: "{{ user.name }}"
  file:
    path: "{{ user_home }}/.ssh/config"
    state: touch
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0644"
    modification_time: preserve
    access_time: preserve

- name: setup {{ user_home }}/.ssh/config
  become: true
  become_user: "{{ user.name }}"
  blockinfile:
    path: "{{ user_home }}/.ssh/config"
    marker: "# {mark} ANSIBLE MANAGED BLOCK user_setup/{{ role_name }}/setup_ssh"
    block: |
      Host *
        ServerAliveInterval 240

- name: get homebrew installer for darwin
  when: ansible_os_family == 'Darwin'
  become: true
  become_user: "{{ user.name }}"
  get_url:
    url: https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
    dest: "{{ user_home }}/.homebrew.installer.sh"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0755"

- name: install homebrew on darwin
  when: ansible_os_family == 'Darwin'
  become: true
  become_user: "{{ user.name }}"
  shell:
    cmd: "NONINTERACTIVE=YES {{ user_home }}/.homebrew.installer.sh"
    chdir: "{{ user_home }}"
    creates: "/opt/homebrew/bin/brew"

- name: set homebrew shell env
  when: ansible_os_family == 'Darwin'
  become: true
  become_user: "{{ user.name }}"
  blockinfile:
    path: "{{ user_home }}/{{ user_profile }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK user_setup/{{ role_name }}/setup_brew_env"
    block: |
      eval "$(/opt/homebrew/bin/brew shellenv)"

- name: install base cli tools via brew
  when: ansible_pkg_mgr == 'homebrew'
  become: true
  become_user: "{{ user.name }}"
  homebrew:
    name:
      - git
      - git-lfs
      - curl
    state: present

- name: install iterm2 via brew cask
  when: ansible_pkg_mgr == 'homebrew'
  become: true
  become_user: "{{ user.name }}"
  homebrew_cask:
    name: iterm2
    state: present

- name: set curl shell config
  when: ansible_pkg_mgr == 'homebrew'
  become: true
  become_user: "{{ user.name }}"
  blockinfile:
    path: "{{ user_home }}/{{ user_profile }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK user_setup/{{ role_name }}/setup_curl"
    block: |
      export PATH="/opt/homebrew/opt/curl/bin:$PATH"

- name: install base cli tools
  when: ansible_pkg_mgr != 'homebrew'
  become: true
  package:
    name:
      - git
      - git-lfs
      - curl
    state: present
