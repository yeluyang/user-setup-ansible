---

- name: add user {{ user.name }}
  user:
    name: "{{ user.name }}"
    password: "{{ user.pass | password_hash('sha512') }}"
    update_password: on_create

- name: determine available groups
  getent:
    database: group

- name: add user into group
  user:
    name: "{{ user.name }}"
    groups: [ "{{ user_group }}" ]
    append: yes
  when: user_group in getent_group
  loop:
      - docker
  loop_control:
    loop_var: user_group

- name: setup home directory for user {{ user.name }}
  become: yes
  become_user: "{{ user.name }}"
  file:
    path: "{{ user_home }}/{{ dir_name }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0755"
  loop_control:
    loop_var: dir_name
  loop:
    - src
    - bin
    - pkg

- name: create user profile {{ user_home }}/{{ user_profile }}
  become: yes
  become_user: "{{ user.name }}"
  file:
    path: "{{ user_home }}/{{ user_profile }}"
    state: touch
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0644"
    modification_time: preserve
    access_time: preserve

- name: setup user profile {{ user_home }}/{{ user_profile }}
  become: yes
  become_user: "{{ user.name }}"
  blockinfile:
    path: "{{ user_home }}/{{ user_profile }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK user_setup/{{ role_name }}/setup_profile"
    block: |
      alias proxy="
              export all_proxy=socks5://${PROXY_SOCKS_ENDPOINT};
              export ALL_PROXY=socks5://${PROXY_SOCKS_ENDPOINT};
              export http_proxy=http://${PROXY_HTTP_ENDPOINT};
              export HTTP_PROXY=http://${PROXY_HTTP_ENDPOINT};
              export https_proxy=http://${PROXY_HTTP_ENDPOINT};
              export HTTPS_PROXY=http://${PROXY_HTTP_ENDPOINT};
              "

      alias unproxy="
              unset all_proxy;
              unset ALL_PROXY;
              unset http_proxy;
              unset HTTP_PROXY;
              unset https_proxy;
              unset HTTPS_PROXY;
              "

      function ssh_proxy() {
        tsocks ssh $*
      }

- name: include {{ user_profile }} into {{ user_home }}/.bashrc
  become: yes
  become_user: "{{ user.name }}"
  blockinfile:
    path: "{{ user_home }}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK user_setup/{{ role_name }}/setup_shell"
    block: |
      source {{ user_home }}/{{ user_profile }}

- name: setup user ssh config directory
  become: yes
  become_user: "{{ user.name }}"
  file:
    path: "{{ user_home }}/.ssh"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0755"

- name: setup user ssh config file
  become: yes
  become_user: "{{ user.name }}"
  file:
    path: "{{ user_home }}/.ssh/config"
    state: touch
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0644"
    modification_time: preserve
    access_time: preserve

- name: setup {{ user_home }}/.ssh/config
  become: yes
  become_user: "{{ user.name }}"
  blockinfile:
    path: "{{ user_home }}/.ssh/config"
    marker: "# {mark} ANSIBLE MANAGED BLOCK user_setup/{{ role_name }}/setup_ssh"
    block: |
      Host *
        ServerAliveInterval 240
